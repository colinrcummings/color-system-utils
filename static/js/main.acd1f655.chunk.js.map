{"version":3,"sources":["components/Checkbox.js","components/ItemInputGroup.js","components/ItemsList.js","components/ItemSorts.js","hooks/useItems.js","utils/calcDeltaE.js","components/App.js","components/Root.js","index.js"],"names":["Checkbox","label","checked","onChange","FormGroup","check","Label","Input","type","ItemInputGroup","items","setItems","useState","inputVal","setInputVal","inputValIsValidItem","test","inputValIsDuplicateItem","Boolean","find","hex","btnIsDisabled","handleSubmit","InputGroup","placeholder","value","event","target","onKeyPress","key","InputGroupAddon","addonType","Button","color","outline","disabled","onClick","className","showInverses","onDragEnd","result","destination","nextItems","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","droppableId","provided","droppableProps","ref","innerRef","style","border","borderRadius","padding","width","map","item","draggableId","snapshot","draggableProps","dragHandleProps","isDragging","draggableStyle","background","boxShadow","undefined","invert","marginBottom","userSelect","title","filter","filterItem","aria-hidden","marginTop","textAlign","ItemSorts","Row","Col","xs","block","hexSorter","sortColors","reverse","useItems","localStorageKey","persistedItems","window","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","hexToRgb","parseToRgb","red","green","blue","rgb2lab","rgb","x","y","z","r","g","b","Math","pow","calcDeltaE","hexA","hexB","labA","labB","deltaL","deltaA","deltaB","c1","sqrt","deltaC","deltaH","deltaLKlsl","deltaCkcsc","deltaHkhsh","i","App","palette1Items","setPalette1Items","palette2Items","setPalette2Items","setShowInverses","showDeltaE","setShowDeltaE","Container","length","ItemsList","display","flexDirection","_","idx","hex1","hex2","fontStyle","parseFloat","toFixed","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acd1f655.chunk.js","sourcesContent":["import React from \"react\";\nimport { FormGroup, Label, Input } from \"reactstrap\";\n\nconst Checkbox = ({ label, checked, onChange }) => (\n  <FormGroup check>\n    <Label check>\n      <Input type=\"checkbox\" checked={checked} onChange={onChange} />\n      {label}\n    </Label>\n  </FormGroup>\n);\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport { InputGroup, Input, InputGroupAddon, Button } from \"reactstrap\";\n\nconst ItemInputGroup = ({ items, setItems }) => {\n  const [inputVal, setInputVal] = useState(\"\");\n  const inputValIsValidItem = /^#[0-9A-F]{6}$/i.test(inputVal); // hex (e.g. #000000)\n  const inputValIsDuplicateItem = Boolean(\n    items.find(({ hex }) => hex === inputVal)\n  );\n  const btnIsDisabled = !inputValIsValidItem || inputValIsDuplicateItem;\n\n  const handleSubmit = () => {\n    setItems([...items, inputVal]);\n    setInputVal(\"\");\n  };\n\n  return (\n    <>\n      <InputGroup>\n        <Input\n          placeholder=\"add hex item...\"\n          value={inputVal}\n          onChange={event => setInputVal(event.target.value)}\n          onKeyPress={event =>\n            event.key === \"Enter\" && !btnIsDisabled && handleSubmit()\n          }\n        />\n        <InputGroupAddon addonType=\"append\">\n          <Button\n            color={btnIsDisabled ? \"secondary\" : \"success\"}\n            outline\n            disabled={btnIsDisabled}\n            onClick={handleSubmit}\n          >\n            Add\n          </Button>\n        </InputGroupAddon>\n      </InputGroup>\n      {inputValIsDuplicateItem && (\n        <p className=\"small text-danger mt-1\">Duplicate hex value.</p>\n      )}\n    </>\n  );\n};\n\nexport default ItemInputGroup;\n","import React from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { invert } from \"polished\";\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nconst getItemStyle = (hex, isDragging, draggableStyle) => ({\n  background: hex,\n  border: \"1px solid #ced4da\",\n  boxShadow: isDragging ? \"0 8px 6px -6px #ddd\" : undefined,\n  color: invert(hex),\n  borderRadius: 4,\n  marginBottom: 8,\n  padding: 16,\n  userSelect: \"none\",\n  ...draggableStyle\n});\n\nconst getListStyle = (/* isDraggingOver */) => ({\n  border: \"1px solid #ced4da\",\n  borderRadius: 4,\n  padding: \"15px 10px 5px 10px\",\n  width: \"100%\"\n});\n\nconst ItemInputGroup = ({ items, setItems, showInverses }) => {\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const nextItems = reorder(\n      items,\n      result.source.index,\n      result.destination.index\n    );\n    setItems(nextItems);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable\">\n        {(provided /* , snapshot */) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            style={getListStyle(/* snapshot.isDraggingOver */)}\n          >\n            {items.map((item, index) => (\n              <Draggable key={item} draggableId={item} index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyle(\n                      item,\n                      snapshot.isDragging,\n                      provided.draggableProps.style\n                    )}\n                  >\n                    {item}\n                    <button\n                      className=\"close text-muted\"\n                      title=\"Remove hex item\"\n                      onClick={() => {\n                        setItems(\n                          items.filter(filterItem => filterItem !== item)\n                        );\n                      }}\n                    >\n                      <span aria-hidden=\"true\">x</span>\n                    </button>\n                    {showInverses && (\n                      <div\n                        className=\"small\"\n                        title={`Inverse of ${item}`}\n                        style={{\n                          background: invert(item),\n                          borderRadius: 4,\n                          color: item,\n                          marginTop: 2,\n                          padding: 4,\n                          textAlign: \"center\",\n                          width: 60\n                        }}\n                      >\n                        {invert(item)}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default ItemInputGroup;\n","import React from \"react\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport hexSorter from \"hexsorter\";\n\nconst ItemSorts = ({ items, setItems }) => {\n  const handleSort = () =>\n    setItems(hexSorter.sortColors(items, \"mostBrightColor\"));\n\n  const handleReverse = () => setItems([...items].reverse());\n\n  return (\n    <Row>\n      <Col xs={6}>\n        <Button color=\"secondary\" outline block onClick={handleSort}>\n          Sort\n        </Button>\n      </Col>\n\n      <Col xs={6}>\n        <Button color=\"secondary\" outline block onClick={handleReverse}>\n          Reverse\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ItemSorts;\n","import { useState, useEffect } from \"react\";\n\nconst useItems = ({ localStorageKey }) => {\n  const [items, setItems] = useState(() => {\n    const persistedItems = window.localStorage.getItem(localStorageKey);\n    if (persistedItems) return JSON.parse(persistedItems);\n    return [];\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(localStorageKey, JSON.stringify(items));\n  }, [localStorageKey, items]);\n\n  return [items, setItems];\n};\n\nexport default useItems;\n","import { parseToRgb } from \"polished\";\n\nconst hexToRgb = hex => {\n  const { red, green, blue } = parseToRgb(hex);\n  return [red, green, blue];\n};\n\n/*\n  https://stackoverflow.com/a/52453462\n*/\n\nconst rgb2lab = rgb => {\n  let r = rgb[0] / 255,\n    g = rgb[1] / 255,\n    b = rgb[2] / 255,\n    x,\n    y,\n    z;\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n  y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0;\n  z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n};\n\nconst calcDeltaE = (hexA, hexB) => {\n  let labA = rgb2lab(hexToRgb(hexA));\n  let labB = rgb2lab(hexToRgb(hexB));\n  let deltaL = labA[0] - labB[0];\n  let deltaA = labA[1] - labB[1];\n  let deltaB = labA[2] - labB[2];\n  let c1 = Math.sqrt(labA[1] * labA[1] + labA[2] * labA[2]);\n  let c2 = Math.sqrt(labB[1] * labB[1] + labB[2] * labB[2]);\n  let deltaC = c1 - c2;\n  let deltaH = deltaA * deltaA + deltaB * deltaB - deltaC * deltaC;\n  deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n  let sc = 1.0 + 0.045 * c1;\n  let sh = 1.0 + 0.015 * c1;\n  let deltaLKlsl = deltaL / 1.0;\n  let deltaCkcsc = deltaC / sc;\n  let deltaHkhsh = deltaH / sh;\n  let i =\n    deltaLKlsl * deltaLKlsl + deltaCkcsc * deltaCkcsc + deltaHkhsh * deltaHkhsh;\n  return i < 0 ? 0 : Math.sqrt(i);\n};\n\nexport default calcDeltaE;\n","import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Checkbox from \"./Checkbox\";\nimport ItemInputGroup from \"./ItemInputGroup\";\nimport ItemsList from \"./ItemsList\";\nimport ItemSorts from \"./ItemSorts\";\nimport useItems from \"../hooks/useItems\";\nimport calcDeltaE from \"../utils/calcDeltaE\";\n\nfunction App() {\n  const [palette1Items, setPalette1Items] = useItems({\n    localStorageKey: \"PALETTE_1_ITEMS\"\n  });\n  const [palette2Items, setPalette2Items] = useItems({\n    localStorageKey: \"PALETTE_2_ITEMS\"\n  });\n  const [showInverses, setShowInverses] = useState(false);\n  const [showDeltaE, setShowDeltaE] = useState(false);\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={12}>\n          <h1 className=\"text-center\">Color System Utils</h1>\n          <div className=\"text-center\"></div>\n        </Col>\n        <Col xs={3} />\n        <Col xs={3} className=\"text-center mb-3\">\n          <Checkbox\n            label=\"Show Inverses\"\n            checked={showInverses}\n            onChange={event => setShowInverses(event.target.checked)}\n          />\n        </Col>\n        <Col xs={3} className=\"text-center mb-3\">\n          <Checkbox\n            label=\"Show Delta E\"\n            checked={showDeltaE}\n            onChange={event => setShowDeltaE(event.target.checked)}\n          />\n        </Col>\n        <Col xs={3} />\n        <Col xs={5}>\n          <h2>Palette 1</h2>\n        </Col>\n        <Col xs={2} />\n        <Col xs={5}>\n          <h2>Palette 2</h2>\n        </Col>\n        <Col xs={5}>\n          {palette1Items.length > 0 ? (\n            <>\n              <ItemsList\n                items={palette1Items}\n                setItems={setPalette1Items}\n                showInverses={showInverses}\n              />\n              <div className=\"mt-3\">\n                <ItemSorts items={palette1Items} setItems={setPalette1Items} />\n              </div>\n            </>\n          ) : (\n            <p className=\"text-muted\">No hex items.</p>\n          )}\n          <div className=\"mt-3\">\n            <ItemInputGroup items={palette1Items} setItems={setPalette1Items} />\n          </div>\n        </Col>\n        <Col xs={2}>\n          {showDeltaE && (\n            <div\n              style={{\n                border: \"1px solid transparent\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                padding: 16\n              }}\n            >\n              {palette1Items.map((_, idx) => {\n                const hex1 = palette1Items[idx];\n                const hex2 = palette2Items[idx];\n\n                if (hex1 && hex2) {\n                  return (\n                    <div\n                      key={idx}\n                      title={`Delta E of ${hex1} and ${hex2}`}\n                      style={{\n                        border: \"1px solid transparent\",\n                        fontStyle: \"italic\",\n                        marginTop: showInverses ? 27 : 0,\n                        marginBottom: 8,\n                        padding: \"16px 0\",\n                        textAlign: \"center\"\n                      }}\n                    >\n                      {parseFloat(calcDeltaE(hex1, hex2)).toFixed(1)}%\n                    </div>\n                  );\n                }\n\n                return null;\n              })}\n            </div>\n          )}\n        </Col>\n        <Col xs={5}>\n          {palette2Items.length > 0 ? (\n            <>\n              <ItemsList\n                items={palette2Items}\n                setItems={setPalette2Items}\n                showInverses={showInverses}\n              />\n              <div className=\"mt-3\">\n                <ItemSorts items={palette2Items} setItems={setPalette2Items} />\n              </div>\n            </>\n          ) : (\n            <p className=\"text-muted\">No hex items.</p>\n          )}\n\n          <div className=\"mt-3\">\n            <ItemInputGroup items={palette2Items} setItems={setPalette2Items} />\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import React, { StrictMode } from \"react\";\nimport App from \"./App\";\n\nconst Root = () => (\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n\nexport default Root;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./components/Root\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}